pipeline {
    agent {
        kubernetes {
            yaml """
apiVersion: v1
kind: Pod
spec:
  containers:
  - name: kaniko
    image: gcr.io/kaniko-project/executor:v1.23.2-debug
    tty: true
    command:
    - /busybox/sleep
    - infinity
    resources:
      requests:
        memory: "13.5Gi"
      limits:
        memory: "13.5Gi"
    volumeMounts:
      - name: registry-credentials
        mountPath: /kaniko/.docker
  volumes:
    - name: registry-credentials
      secret:
        secretName: docker-hub-secret
        items: 
        - key: .dockerconfigjson
          path: config.json
"""
            defaultContainer "kaniko"
        }
    }
    
    environment {
        // Ïù¥ÎØ∏ÏßÄ Ïù¥Î¶Ñ ÏÑ§Ï†ï
        DOCKER_HUB_USER = 'qkfka9045'
        IMAGE_NAME = 'fdc-dust-web-app'
        IMAGE_TAG = "${env.BUILD_NUMBER}"
    }
    
    stages {
        stage('Checkout & Setup') {
            steps {
                script {
                    def workingDirectory = sh(script: "pwd", returnStdout: true).trim()
                    echo "Working directory: ${workingDirectory}"
                }
                checkout scm
            }
        }
        stage('Build Docker Image with Kaniko') {
            steps {
                dir('web'){
                    container(name: "kaniko", shell: "/busybox/sh") {
                        script {
                            def dockerfileDir = './Dockerfile'
                            sh """
                            /kaniko/executor \
                                --compressed-caching=false \
                                --context . \
                                --dockerfile=${dockerfileDir} \
                                --destination ${DOCKER_HUB_USER}/${IMAGE_NAME}:${IMAGE_TAG}
                            """
                        }
                    }
                }
            }
        }
    }
    
    post {
        always {
            script {
                echo "=========================================="
                echo "Build Summary:"
                echo "Build Number: ${env.BUILD_NUMBER}"
                echo "Status: ${currentBuild.result ?: 'SUCCESS'}"
                echo "Docker Image: ${DOCKER_HUB_USER}/${IMAGE_NAME}:${IMAGE_TAG}"
                echo "Git Commit: ${env.GIT_COMMIT}"
                echo "Branch: ${env.BRANCH_NAME}"
                echo "=========================================="
            }
        }
        success {
            script {
                echo "üéâ Build successful!"
                echo "üì¶ Docker image created: ${DOCKER_HUB_USER}/${IMAGE_NAME}:${IMAGE_TAG}"
                echo "üîó View at: https://hub.docker.com/r/${DOCKER_HUB_USER}/${IMAGE_NAME}"
            }
        }
        failure {
            script {
                echo "‚ùå Build failed!"
                echo "Build Number: ${env.BUILD_NUMBER}"
            }
        }
    }
}

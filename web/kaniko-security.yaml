# Kaniko 보안 강화 설정
# Pod Security Standards를 준수하는 추가 보안 설정

---
apiVersion: v1
kind: PodSecurityPolicy
metadata:
  name: kaniko-psp
spec:
  privileged: false
  allowPrivilegeEscalation: false
  requiredDropCapabilities:
    - ALL
  volumes:
    - 'configMap'
    - 'emptyDir'
    - 'projected'
    - 'secret'
    - 'downwardAPI'
    - 'persistentVolumeClaim'
  runAsUser:
    rule: 'MustRunAsNonRoot'
  seLinux:
    rule: 'RunAsAny'
  fsGroup:
    rule: 'RunAsAny'
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: jenkins-kaniko-secure
  namespace: default
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: kaniko-secure-role
  namespace: default
rules:
- apiGroups: [""]
  resources: ["pods", "pods/log"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
- apiGroups: [""]
  resources: ["secrets", "configmaps"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["policy"]
  resources: ["podsecuritypolicies"]
  verbs: ["use"]
  resourceNames: ["kaniko-psp"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: kaniko-secure-binding
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: kaniko-secure-role
subjects:
- kind: ServiceAccount
  name: jenkins-kaniko-secure
  namespace: default
---
apiVersion: v1
kind: NetworkPolicy
metadata:
  name: kaniko-network-policy
  namespace: default
spec:
  podSelector:
    matchLabels:
      app: jenkins-kaniko
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          name: jenkins
  egress:
  - to: []
    ports:
    - protocol: TCP
      port: 443  # HTTPS for registry
    - protocol: TCP
      port: 80   # HTTP for registry
    - protocol: TCP
      port: 53   # DNS
    - protocol: UDP
      port: 53   # DNS
